name: Deploy SwiftGen

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  test:
    uses: ./.github/workflows/test.yml
  
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/swiftgen:latest
          ${{ secrets.DOCKER_USERNAME }}/swiftgen:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/swiftgen:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/swiftgen:buildcache,mode=max
    
    - name: Deploy to production
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here
        # e.g., kubectl apply, AWS ECS update, etc.
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes in this Release
          
          ### Features
          - Comprehensive test suite with 80%+ coverage
          - Contextual chat responses (no more "Perfect!" every time)
          - Production-ready error handling
          
          ### Bug Fixes
          - Fixed modification degradation issue
          - Improved SSL error handling
          - Better WebSocket reliability
          
          ### Testing
          - Unit tests for all core modules
          - Integration tests for workflows
          - CI/CD pipeline with GitHub Actions
        draft: false
        prerelease: false