{
  "repo": "Tokamak",
  "description": "SwiftUI-compatible framework for building browser apps with WebAssembly and native apps for other platforms",
  "file_path": "Package.swift",
  "content": "// swift-tools-version:5.6\n\nimport PackageDescription\n\nlet package = Package(\n  name: \"Tokamak\",\n  platforms: [\n    .macOS(.v11),\n    .iOS(.v13),\n  ],\n  products: [\n    // Products define the executables and libraries produced by a package,\n    // and make them visible to other packages.\n    .executable(\n      name: \"TokamakDemo\",\n      targets: [\"TokamakDemo\"]\n    ),\n    .library(\n      name: \"TokamakDOM\",\n      targets: [\"TokamakDOM\"]\n    ),\n    .library(\n      name: \"TokamakStaticHTML\",\n      targets: [\"TokamakStaticHTML\"]\n    ),\n    .executable(\n      name: \"TokamakStaticHTMLDemo\",\n      targets: [\"TokamakStaticHTMLDemo\"]\n    ),\n    .library(\n      name: \"TokamakGTK\",\n      targets: [\"TokamakGTK\"]\n    ),\n    .executable(\n      name: \"TokamakGTKDemo\",\n      targets: [\"TokamakGTKDemo\"]\n    ),\n    .library(\n      name: \"TokamakShim\",\n      targets: [\"TokamakShim\"]\n    ),\n    .executable(\n      name: \"TokamakStaticHTMLBenchmark\",\n      targets: [\"TokamakStaticHTMLBenchmark\"]\n    ),\n  ],\n  dependencies: [\n    .package(\n      url: \"https://github.com/swiftwasm/JavaScriptKit.git\",\n      from: \"0.15.0\"\n    ),\n    .package(\n      url: \"https://github.com/OpenCombine/OpenCombine.git\",\n      from: \"0.12.0\"\n    ),\n    .package(\n      url: \"https://github.com/swiftwasm/OpenCombineJS.git\",\n      from: \"0.2.0\"\n    ),\n    .package(\n      url: \"https://github.com/google/swift-benchmark\",\n      from: \"0.1.2\"\n    ),\n    .package(\n      url: \"https://github.com/pointfreeco/swift-snapshot-testing.git\",\n      from: \"1.9.0\"\n    ),\n  ],\n  targets: [\n    // Targets are the basic building blocks of a package. A target can define\n    // a module or a test suite.\n    // Targets can depend on other targets in this package, and on products\n    // in packages which this package depends on.\n    .target(\n      name: \"TokamakCore\",\n      dependencies: [\n        .product(\n          name: \"OpenCombineShim\",\n          package: \"OpenCombine\"\n        ),\n      ]\n    ),\n    .target(\n      name: \"TokamakShim\",\n      dependencies: [\n        .target(name: \"TokamakDOM\", condition: .when(platforms: [.wasi])),\n        .target(name: \"TokamakGTK\", condition: .when(platforms: [.linux])),\n      ]\n    ),\n    .systemLibrary(\n      name: \"CGTK\",\n      pkgConfig: \"gtk+-3.0\",\n      providers: [\n        .apt([\"libgtk+-3.0\", \"gtk+-3.0\"]),\n        // .yum([\"gtk3-devel\"]),\n        .brew([\"gtk+3\"]),\n      ]\n    ),\n    .systemLibrary(\n      name: \"CGDK\",\n      pkgConfig: \"gdk-3.0\",\n      providers: [\n        .apt([\"libgtk+-3.0\", \"gtk+-3.0\"]),\n        // .yum([\"gtk3-devel\"]),\n        .brew([\"gtk+3\"]),\n      ]\n    ),\n    .target(\n      name: \"TokamakGTKCHelpers\",\n      dependencies: [\"CGTK\"]\n    ),\n    .target(\n      name: \"TokamakGTK\",\n      dependencies: [\n        \"TokamakCore\", \"CGTK\", \"CGDK\", \"TokamakGTKCHelpers\",\n        .product(\n          name: \"OpenCombineShim\",\n          package: \"OpenCombine\"\n        ),\n      ]\n    ),\n    .executableTarget(\n      name: \"TokamakGTKDemo\",\n      dependencies: [\"TokamakGTK\"],\n      resources: [.copy(\"logo-header.png\")]\n    ),\n    .target(\n      name: \"TokamakStaticHTML\",\n      dependencies: [\n        \"TokamakCore\",\n      ]\n    ),\n    .executableTarget(\n      name: \"TokamakCoreBenchmark\",\n      dependencies: [\n        .product(name: \"Benchmark\", package: \"swift-benchmark\"),\n        \"TokamakCore\",\n        \"TokamakTestRenderer\",\n      ]\n    ),\n    .executableTarget(\n      name: \"TokamakStaticHTMLBenchmark\",\n      dependencies: [\n        .product(name: \"Benchmark\", package: \"swift-benchmark\"),\n        \"TokamakStaticHTML\",\n      ]\n    ),\n    .target(\n      name: \"TokamakDOM\",\n      dependencies: [\n        \"TokamakCore\",\n        \"TokamakStaticHTML\",\n        .product(\n          name: \"OpenCombineShim\",\n          package: \"OpenCombine\"\n        ),\n        .product(\n          name: \"JavaScriptKit\",\n          package: \"JavaScriptKit\",\n          condition: .when(platforms: [.wasi])\n        ),\n        .product(\n          name: \"JavaScriptEventLoop\",\n          package: \"JavaScriptKit\",\n          condition: .when(platforms: [.wasi])\n        ),\n        \"OpenCombineJS\",\n      ]\n    ),\n    .executableTarget(\n      name: \"TokamakDemo\",\n      dependencies: [\n        \"TokamakShim\",\n        .product(\n          name: \"JavaScriptKit\",\n          package: \"JavaScriptKit\",\n          condition: .when(platforms: [.wasi])\n        ),\n      ],\n      resources: [.copy(\"logo-header.png\")],\n      linkerSettings: [\n        .unsafeFlags(\n          [\"-Xlinker\", \"--stack-first\", \"-Xlinker\", \"-z\", \"-Xlinker\", \"stack-size=16777216\"],\n          .when(platforms: [.wasi])\n        ),\n      ]\n    ),\n    .executableTarget(\n      name: \"TokamakStaticHTMLDemo\",\n      dependencies: [\n        \"TokamakStaticHTML\",\n      ]\n    ),\n    .target(\n      name: \"TokamakTestRenderer\",\n      dependencies: [\"TokamakCore\"]\n    ),\n    .testTarget(\n      name: \"TokamakLayoutTests\",\n      dependencies: [\n        \"TokamakCore\",\n        \"TokamakStaticHTML\",\n        .product(\n          name: \"SnapshotTesting\",\n          package: \"swift-snapshot-testing\",\n          condition: .when(platforms: [.macOS])\n        ),\n      ]\n    ),\n    .testTarget(\n      name: \"TokamakReconcilerTests\",\n      dependencies: [\n        \"TokamakCore\",\n        \"TokamakTestRenderer\",\n      ]\n    ),\n    .testTarget(\n      name: \"TokamakTests\",\n      dependencies: [\"TokamakTestRenderer\"]\n    ),\n    .testTarget(\n      name: \"TokamakStaticHTMLTests\",\n      dependencies: [\n        \"TokamakStaticHTML\",\n        .product(\n          name: \"SnapshotTesting\",\n          package: \"swift-snapshot-testing\",\n          condition: .when(platforms: [.macOS])\n        ),\n      ],\n      exclude: [\"__Snapshots__\", \"RenderingTests/__Snapshots__\"]\n    ),\n  ]\n)\n",
  "category": "utilities",
  "timestamp": "2025-06-27T15:20:36.524821"
}