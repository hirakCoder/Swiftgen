{
  "repo": "Whisperboard",
  "description": "The open-source iOS app that's making quality voice transcription more accessible on mobile devices.",
  "file_path": "Project.swift",
  "content": "import Foundation\nimport ProjectDescription\n\npublic let version = \"1.13.1\"\n\npublic let deploymentTargetString = \"16.0\"\npublic let appDeploymentTargets: DeploymentTargets = .iOS(deploymentTargetString)\npublic let appDestinations: Destinations = [.iPhone, .iPad]\npublic let devTeam = \"8A76N862C8\"\n\nlet isAppStore = Environment.isAppStore.getBoolean(default: false)\nlet additionalCondition = isAppStore ? \"APPSTORE\" : \"\"\n\nlet isRevealSupported = FileManager.default.fileExists(atPath: \"App/Support/Reveal/RevealServer.xcframework\") && !isAppStore\nprint(\"RevealServer.xcframework is \\(isRevealSupported ? \"supported\" : \"not supported\")\")\nlet isEttraceSupported = FileManager.default.fileExists(atPath: \"App/Support/ETTrace.xcframework\") && !isAppStore\nprint(\"ETTrace.xcframework is \\(isEttraceSupported ? \"supported\" : \"not supported\")\")\n\nvar appInfoPlist: [String: Plist.Value] = [\n  \"CFBundleShortVersionString\": Plist.Value(stringLiteral: version),\n  \"CFBundleURLTypes\": [\n    [\n      \"CFBundleTypeRole\": \"Editor\",\n      \"CFBundleURLName\": .string(\"WhisperBoard\"),\n      \"CFBundleURLSchemes\": [\n        .string(\"whisperboard\"),\n      ],\n    ],\n  ],\n  \"UIApplicationSceneManifest\": [\n    \"UIApplicationSupportsMultipleScenes\": false,\n    \"UISceneConfigurations\": [],\n  ],\n  \"ITSAppUsesNonExemptEncryption\": false,\n  \"UILaunchScreen\": [\n    \"UILaunchScreen\": [:],\n  ],\n  \"UISupportedInterfaceOrientations\": [\n    \"UIInterfaceOrientationPortrait\",\n  ],\n  \"UISupportedInterfaceOrientations~ipad\": [\n    \"UIInterfaceOrientationPortrait\",\n    \"UIInterfaceOrientationPortraitUpsideDown\",\n    \"UIInterfaceOrientationLandscapeLeft\",\n    \"UIInterfaceOrientationLandscapeRight\",\n  ],\n  \"NSMicrophoneUsageDescription\": \"WhisperBoard uses the microphone to record voice and later transcribe it.\",\n  \"UIUserInterfaceStyle\": \"Dark\",\n  \"UIBackgroundModes\": [\n    \"audio\",\n    \"processing\",\n  ],\n  \"BGTaskSchedulerPermittedIdentifiers\": [\n    \"$(PRODUCT_BUNDLE_IDENTIFIER)\",\n  ],\n  \"NSUbiquitousContainers\": [\n    \"iCloud.me.igortarasenko.whisperboard\": [\n      \"NSUbiquitousContainerIsDocumentScopePublic\": true,\n      \"NSUbiquitousContainerName\": \"WhisperBoard\",\n      \"NSUbiquitousContainerSupportedFolderLevels\": \"Any\",\n    ],\n  ],\n]\n\nif !isAppStore {\n  appInfoPlist[\"NSLocalNetworkUsageDescription\"] = Plist.Value.string(\"Network usage required for debugging purposes\")\n  appInfoPlist[\"NSBonjourServices\"] = [Plist.Value.string(\"_pulse._tcp\")]\n}\n\nlet storeKitScheme: Scheme = .scheme(\n  name: \"WhisperBoard\",\n  shared: true,\n  buildAction: .buildAction(targets: [\"WhisperBoard\"]),\n  runAction: .runAction(\n    configuration: \"Debug\",\n    executable: \"WhisperBoard\",\n    options: .options(\n      storeKitConfigurationPath: \"App/Support/Whisperboard.storekit\"\n    )\n  ),\n  archiveAction: .archiveAction(configuration: \"Release\"),\n  profileAction: .profileAction(configuration: \"Release\", executable: \"WhisperBoard\"),\n  analyzeAction: .analyzeAction(configuration: \"Debug\")\n)\n\nfunc createAppTarget(suffix: String = \"\", isDev: Bool = false, scripts: [TargetScript] = [], dependencies: [TargetDependency] = []) -> Target {\n  .target(\n    name: \"WhisperBoard\" + suffix,\n    destinations: appDestinations,\n    product: .app,\n    bundleId: \"me.igortarasenko.Whisperboard\",\n    deploymentTargets: appDeploymentTargets,\n    infoPlist: .extendingDefault(with: appInfoPlist),\n    sources: \"App/Sources/**\",\n    resources: .resources(\n      [\"App/Resources/**\"],\n      privacyManifest: .privacyManifest(\n        tracking: false,\n        trackingDomains: [],\n        collectedDataTypes: [\n          [\n            \"NSPrivacyCollectedDataType\": \"NSPrivacyCollectedDataTypeName\",\n            \"NSPrivacyCollectedDataTypeLinked\": false,\n            \"NSPrivacyCollectedDataTypeTracking\": false,\n            \"NSPrivacyCollectedDataTypePurposes\": [\n              \"NSPrivacyCollectedDataTypePurposeAppFunctionality\",\n            ],\n          ],\n        ],\n        accessedApiTypes: [\n          [\n            \"NSPrivacyAccessedAPIType\": \"NSPrivacyAccessedAPICategoryUserDefaults\",\n            \"NSPrivacyAccessedAPITypeReasons\": [\n              \"CA92.1\",\n            ],\n          ],\n        ]\n      )\n    ),\n    entitlements: \"App/Support/app.entitlements\",\n    scripts: scripts,\n\n    dependencies: [.target(name: \"WhisperBoardKit\")]\n      + (suffix.isEmpty ? [.target(name: \"ShareExtension\")] : [])\n      + dependencies,\n\n    settings: .settings(\n      base: [\n        \"CODE_SIGN_STYLE\": \"Automatic\",\n        \"MARKETING_VERSION\": SettingValue(stringLiteral: version),\n        \"CODE_SIGN_IDENTITY\": \"iPhone Developer\",\n        \"CODE_SIGNING_REQUIRED\": \"YES\",\n      ],\n      debug: [\n        \"OTHER_SWIFT_FLAGS\": \"-D DEBUG $(inherited) -Xfrontend -warn-long-function-bodies=500 -Xfrontend -warn-long-expression-type-checking=500 -Xfrontend -debug-time-function-bodies -Xfrontend -debug-time-expression-type-checking -Xfrontend -enable-actor-data-race-checks\",\n        \"OTHER_LDFLAGS\": \"-Xlinker -interposable $(inherited)\",\n        \"SWIFT_ACTIVE_COMPILATION_CONDITIONS\": \"\\(additionalCondition) \\(isDev ? \"DEV\" : \"\") DEBUG\",\n      ],\n      release: [\n        \"SWIFT_ACTIVE_COMPILATION_CONDITIONS\": \"\\(additionalCondition) \\(isDev ? \"DEV\" : \"\")\",\n      ]\n    )\n  )\n}\n\nlet project = Project(\n  name: \"WhisperBoard\",\n\n  options: .options(\n    disableShowEnvironmentVarsInScriptPhases: true,\n    textSettings: .textSettings(\n      indentWidth: 2,\n      tabWidth: 2\n    )\n  ),\n\n  // packages: isAppStore ? [.package(url: \"https://github.com/rollbar/rollbar-apple\", from: \"3.2.0\")] : [],\n\n  settings: .settings(\n    base: [\n      \"GCC_TREAT_WARNINGS_AS_ERRORS\": \"YES\",\n      \"SWIFT_TREAT_WARNINGS_AS_ERRORS\": \"YES\",\n      \"IPHONEOS_DEPLOYMENT_TARGET\": SettingValue(stringLiteral: deploymentTargetString),\n      \"ENABLE_BITCODE\": \"NO\",\n      \"ENABLE_USER_SCRIPT_SANDBOXING\": \"NO\",\n      \"CODE_SIGN_IDENTITY\": \"\",\n      \"CODE_SIGNING_REQUIRED\": \"NO\",\n      \"DEVELOPMENT_TEAM\": SettingValue(stringLiteral: devTeam),\n      \"MTL_FAST_MATH\": \"YES\",\n    ],\n    debug: [\n      \"OTHER_SWIFT_FLAGS\": \"-D DEBUG $(inherited) -Xfrontend -warn-long-function-bodies=500 -Xfrontend -warn-long-expression-type-checking=500 -Xfrontend -debug-time-function-bodies -Xfrontend -debug-time-expression-type-checking -Xfrontend -enable-actor-data-race-checks\",\n      \"OTHER_LDFLAGS\": \"-Xlinker -interposable $(inherited)\",\n      \"SWIFT_ACTIVE_COMPILATION_CONDITIONS\": \"\\(additionalCondition) DEBUG\",\n    ],\n    release: [\n      \"SWIFT_ACTIVE_COMPILATION_CONDITIONS\": \"\\(additionalCondition)\",\n    ]\n  ),\n\n  targets:\n\n  // MARK: - App\n\n  // Main Target\n  [createAppTarget()]\n    + (isAppStore\n      ? []\n      : [\n        // Additional Dev target with various extra scripts and debug settings\n        createAppTarget(\n          suffix: \"Dev\",\n          isDev: true,\n          scripts:\n          [\n            .post(\n              path: \"ci_scripts/post_build_checks.sh\",\n              name: \"Additional Checks\",\n              basedOnDependencyAnalysis: false\n            ),\n            // .post(\n            //   script: \"periphery scan\",\n            //   name: \"Periphery\",\n            //   basedOnDependencyAnalysis: false\n            // ),\n            .post(\n              script: \"\"\"\n              export REVEAL_SERVER_FILENAME=\"RevealServer.xcframework\"\n              export REVEAL_SERVER_PATH=\"${SRCROOT}/App/Support/Reveal/${REVEAL_SERVER_FILENAME}\"\n              [ -d \"${REVEAL_SERVER_PATH}\" ] && \"${REVEAL_SERVER_PATH}/Scripts/integrate_revealserver.sh\" || echo \"Reveal Server not loaded into ${TARGET_NAME}: ${REVEAL_SERVER_FILENAME} could not be found.\"\n              \"\"\",\n              name: \"Reveal Server\",\n              basedOnDependencyAnalysis: false\n            ),\n            .post(\n              script: \"xclogparser parse --workspace WhisperBoard.xcworkspace --reporter html || true\",\n              name: \"XCLogParser\",\n              basedOnDependencyAnalysis: false\n            ),\n          ],\n          dependencies: []\n            // Check if RevealServer framework exists at this path and only then include it in this array of dependencies\n            + (isRevealSupported ? [.xcframework(path: \"//App/Support/Reveal/RevealServer.xcframework\", status: .optional)] : [])\n            + (isEttraceSupported ? [.xcframework(path: \"//App/Support/ETTrace.xcframework\", status: .optional)] : [])\n        ),\n      ])\n\n    + [\n      // MARK: - ShareExtension\n\n      .target(\n        name: \"ShareExtension\",\n        destinations: appDestinations,\n        product: .appExtension,\n        bundleId: \"me.igortarasenko.Whisperboard.ShareExtension\",\n        infoPlist: .extendingDefault(with: [\n          \"CFBundleDisplayName\": \"$(PRODUCT_NAME)\",\n          \"CFBundleShortVersionString\": Plist.Value(stringLiteral: version),\n          \"NSExtension\": [\n            \"NSExtensionPointIdentifier\": \"com.apple.share-services\",\n            \"NSExtensionPrincipalClass\": \"$(PRODUCT_MODULE_NAME).ShareViewController\",\n            \"NSExtensionAttributes\": [\n              \"NSExtensionActivationRule\": \"\"\"\n              SUBQUERY (\n                  extensionItems,\n                  $extensionItem,\n                  SUBQUERY (\n                      $extensionItem.attachments,\n                      $attachment,\n                      ANY $attachment.registeredTypeIdentifiers UTI-CONFORMS-TO \"public.audio\" ||\n                      ANY $attachment.registeredTypeIdentifiers UTI-CONFORMS-TO \"public.mpeg-4-audio\" ||\n                      ANY $attachment.registeredTypeIdentifiers UTI-CONFORMS-TO \"public.mp3\" ||\n                      ANY $attachment.registeredTypeIdentifiers UTI-CONFORMS-TO \"com.microsoft.windows-media-wma\" ||\n                      ANY $attachment.registeredTypeIdentifiers UTI-CONFORMS-TO \"public.aifc-audio\" ||\n                      ANY $attachment.registeredTypeIdentifiers UTI-CONFORMS-TO \"public.aiff-audio\" ||\n                      ANY $attachment.registeredTypeIdentifiers UTI-CONFORMS-TO \"public.midi-audio\" ||\n                      ANY $attachment.registeredTypeIdentifiers UTI-CONFORMS-TO \"public.ac3-audio\" ||\n                      ANY $attachment.registeredTypeIdentifiers UTI-CONFORMS-TO \"com.microsoft.waveform-audio\"\n                  ).@count == $extensionItem.attachments.@count\n              ).@count == 1\n              \"\"\",\n            ],\n          ],\n        ]),\n        sources: \"App/ShareExtension/ShareViewController.swift\",\n        entitlements: \"App/Support/ShareExtension.entitlements\",\n        dependencies: [\n          .external(name: \"AudioKit\"),\n        ]\n      ),\n\n      // MARK: - AppKit\n\n      .target(\n        name: \"WhisperBoardKit\",\n        destinations: appDestinations,\n        product: .staticFramework,\n        bundleId: \"me.igortarasenko.WhisperboardKit\",\n        deploymentTargets: appDeploymentTargets,\n        infoPlist: .extendingDefault(with: [:]),\n        sources: \"Sources/AppKit/**\",\n        resources: \"Resources/AppKit/**\",\n        dependencies: [\n          .external(name: \"AsyncAlgorithms\"),\n          .external(name: \"AudioKit\"),\n          .external(name: \"ComposableArchitecture\"),\n          .external(name: \"DependenciesAdditions\"),\n          .external(name: \"DSWaveformImage\"),\n          .external(name: \"DSWaveformImageViews\"),\n          .external(name: \"DynamicColor\"),\n          .external(name: \"FluidGradient\"),\n          .external(name: \"Inject\"),\n          .external(name: \"KeychainAccess\"),\n          .external(name: \"Logging\"),\n          .external(name: \"Lottie\"),\n          .external(name: \"NavigationTransitions\"),\n          .external(name: \"OrderedCollections\"),\n          .external(name: \"Popovers\"),\n          .external(name: \"PulseLogHandler\"),\n          .external(name: \"PulseUI\"),\n          .external(name: \"SwiftUIIntrospect\"),\n          .external(name: \"VariableBlurView\"),\n          .external(name: \"WhisperKit\"),\n          .external(name: \"Pow\"),\n          // .external(name: \"RevenueCat\"),\n\n          .target(name: \"Common\"),\n          .target(name: \"AudioProcessing\"),\n        ] + (isAppStore ? [.external(name: \"RollbarNotifier\")] : []),\n        settings: .settings(\n          base: [\n            \"SWIFT_OBJC_BRIDGING_HEADER\": \"$SRCROOT/Support/AppKit/Bridging.h\",\n          ]\n        )\n      ),\n      .target(\n        name: \"WhisperBoardKitTests\",\n        destinations: appDestinations,\n        product: .unitTests,\n        bundleId: \"me.igortarasenko.WhisperboardKitTests\",\n        infoPlist: .default,\n        sources: \"Tests/AppKit/**\",\n        dependencies: [\n          .target(name: \"WhisperBoardKit\"),\n          .external(name: \"SnapshotTesting\"),\n        ]\n      ),\n\n      .target(\n        name: \"AudioProcessing\",\n        destinations: appDestinations,\n        product: .staticFramework,\n        bundleId: \"me.igortarasenko.WhisperboardKit.AudioProcessing\",\n        infoPlist: .default,\n        sources: \"Sources/AudioProcessing/**\",\n        dependencies: [\n          .external(name: \"AsyncAlgorithms\"),\n          .external(name: \"AudioKit\"),\n          .external(name: \"WhisperKit\"),\n          .external(name: \"Perception\"),\n          .external(name: \"Dependencies\"),\n          .external(name: \"ComposableArchitecture\"),\n          .target(name: \"Common\"),\n        ]\n      ),\n      .target(\n        name: \"AudioProcessingTests\",\n        destinations: appDestinations,\n        product: .unitTests,\n        bundleId: \"me.igortarasenko.WhisperboardKit.AudioProcessingTests\",\n        infoPlist: .default,\n        sources: \"Tests/AudioProcessing/**\",\n        resources: \"TestResources/AudioProcessing/**\",\n        dependencies: [\n          .target(name: \"AudioProcessing\"),\n          .external(name: \"SnapshotTesting\"),\n        ]\n      ),\n      .target(\n        name: \"Common\",\n        destinations: appDestinations,\n        product: .staticFramework,\n        bundleId: \"me.igortarasenko.WhisperboardKit.Common\",\n        infoPlist: .default,\n        sources: \"Sources/Common/**\",\n        dependencies: [\n          .external(name: \"AsyncAlgorithms\"),\n          .external(name: \"PulseLogHandler\"),\n          .external(name: \"Pulse\"),\n          .external(name: \"ComposableArchitecture\"),\n        ]\n      ),\n      .target(\n        name: \"CommonTests\",\n        destinations: appDestinations,\n        product: .unitTests,\n        bundleId: \"me.igortarasenko.WhisperboardKit.CommonTests\",\n        infoPlist: .default,\n        sources: \"Tests/Common/**\",\n        dependencies: [\n          .target(name: \"Common\"),\n          .external(name: \"SnapshotTesting\"),\n        ]\n      ),\n    ],\n\n  schemes: [storeKitScheme],\n\n  resourceSynthesizers: [\n    .files(extensions: [\"bin\"]),\n    .assets(),\n    .fonts(),\n    .strings(),\n    .custom(\n      name: \"Lottie\",\n      parser: .json,\n      extensions: [\"lottie\"]\n    ),\n  ]\n)\n",
  "category": "utilities",
  "timestamp": "2025-06-27T15:21:09.380799"
}